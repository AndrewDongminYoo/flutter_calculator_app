test:
  (description): Runs all tests in the Flutter project with coverage enabled.
  (scripts):
    - flutter test --coverage --concurrency=4 --test-randomize-ordering-seed=random --dart-define="FLUTTER_TEST=true"

posttest:
  (description): Generates a coverage report from the test coverage data.
  (scripts):
    - lcov --quiet --remove coverage/lcov.info "**/*.g.dart" "**/l10n/arb/**.dart" -o coverage/lcov_filtered.info
    - genhtml coverage/lcov_filtered.info -o coverage/ --quiet

reinstall:
  (description): Cleans and reinstalls the Flutter project by removing old builds, fetching dependencies, running code generators, and formatting the code.
  (scripts):
    - flutter clean
    - flutter packages get
    - $bootstrap

bootstrap:
  (description): Initializes the project by generating necessary code, sorting imports, applying fixes, and formatting.
  (scripts):
    - $generate
    - $format

generate:
  (description): Runs code generation builders and sorts imports to set up project files.
  (scripts):
    - dart run build_runner build --delete-conflicting-outputs

format:
  (description): Applies automated fixes, sorts imports, and formats the codebase to ensure consistent code quality.
  (scripts):
    - dart fix --apply
    - dart format --line-length 120 .
    - dart run import_sorter:main -e

hard:
  (description): Forces an upgrade of Flutter and its packages to their latest versions and updates CocoaPods dependencies for iOS.
  (scripts):
    - flutter upgrade --force
    - flutter packages upgrade --major-versions --tighten
    - (cd ios && pod update)

build:
  aab:
    (description): Builds an Android App Bundle file for production, opens the output in Android Studio.
    (scripts): >
      flutter build appbundle --flavor production
      --release --tree-shake-icons --build-number $(TZ='Asia/Seoul' date +'%y%m%d%H')
      --verbose > build-appbundle.log 2> build-error.log
      && open -a 'Android Studio' build/app/outputs/bundle/productionRelease
      || echo "Build failed. Check build-error.log for details."

  ipa:
    (description): Builds an iOS archive bundle (.xcarchive) and IPA for production (.ipa), opens it in Xcode.
    (scripts): >
      flutter build ipa --flavor production
      --release --tree-shake-icons --build-number $(TZ='Asia/Seoul' date +'%y%m%d%H')
      --verbose > build-ipa.log 2> build-error.log
      && open -a 'Xcode' build/ios/archive/Runner.xcarchive
      || echo "Build failed. Check build-error.log for details."

  apk:
    (description): Builds an Android APK file for production and opens the output directory.
    (scripts): >
      flutter build apk --flavor production --dart-define="APP_DISTRIBUTION=true"
      --release --tree-shake-icons --build-number $(TZ='Asia/Seoul' date +'%y%m%d%H')
      --verbose > build-apk.log 2> build-error.log
      && open build/app/outputs/flutter-apk
      || echo "Build failed. Check build-error.log for details."
